apiVersion: v1
kind: Namespace
metadata:
  name: testapp-ns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: testapp-app
  namespace: testapp-ns
spec:
  selector:
    matchLabels:
      app: testapp-app
  minReadySeconds: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  replicas: 2
  template:
    metadata:
      labels:
        app: testapp-app
    spec:
      containers:
      - name: testapp-app
        image: vital987/testapp:latest
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /
            port: 8080
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: testapp-svc
  namespace: testapp-ns
spec:
  selector:
    app: testapp-app
  ports:
  - port: 80
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testapp-ing
  namespace: testapp-ns
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: testapp-svc
            port:
              number: 80
